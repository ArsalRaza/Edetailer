package com.e.detailer.asynctask;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.List;

import com.e.detailer.DetailerConstants;
import com.e.detailer.DetailerUtils;
import com.e.detailer.activity.R;
import com.itextpdf.text.BadElementException;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Font;
import com.itextpdf.text.Image;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;

import android.app.Activity;
import android.app.ProgressDialog;
import android.os.AsyncTask;

public class AsyncTaskCreatePdfFile extends AsyncTask<String, Void, String> {
	
	private Activity mActivity;
	private List<String> mList;
	private ProgressDialog mDialog;
	
	@Override
	protected void onPreExecute(){
		mDialog = ProgressDialog.show(mActivity, mActivity.getResources().getString(R.string.app_name), "Creating PDF..");
	}
	public AsyncTaskCreatePdfFile(Activity act, List<String> list){
		this.mActivity = act;
		this.mList = list;
	}
	
	@Override
	protected String doInBackground(String... params) {
		
		String pdfPath = DetailerConstants.MAIN_DIR_PATH 
				+ DetailerConstants.PDF_FOLDER
				+ System.currentTimeMillis()
				+ ".pdf";

		File pdfFile = new File(pdfPath);
		Document document = new Document();
		try{
		
			PdfWriter.getInstance(document, new FileOutputStream(pdfFile));
			document.open();
			
			Paragraph preface = new Paragraph();
			preface.add(new Paragraph("Report generated by: "+mActivity
					.getResources()
					.getString(R.string.app_name)
					,new Font(Font.
							FontFamily.TIMES_ROMAN,
							14, 
							Font.ITALIC)));
			document.add(preface);
			
			for (int i = 0; i < mList.size(); i++){
				addingImagesToPdf(document, i);
			}
			
			document.close();
		
		}catch(Exception exception){
		}

		return pdfPath;
	}

	private void addingImagesToPdf(Document document,int i) {
		Image image;
		try {
			
			image = Image.getInstance(DetailerUtils.getBytesFromImagePath(mList.get(i)));
			image.scalePercent(40f);
//			float documentWidth = document.getPageSize().getWidth() - document.leftMargin() - document.rightMargin();
//			float documentHeight = document.getPageSize().getHeight() - document.topMargin() - document.bottomMargin();
//			image.scaleToFit(documentWidth, documentHeight);
			
			document.add(image);
			
		} catch (BadElementException | IOException e ) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (DocumentException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}
	@Override
	protected void onPostExecute(String path){
		
		if( mDialog != null && mDialog.isShowing())
			mDialog.dismiss();
		
		DetailerUtils.requestForMailIntent(mActivity,path);
	}
	
}
